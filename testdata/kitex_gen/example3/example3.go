// Code generated by thriftgo (0.3.15). DO NOT EDIT.

package example3

import (
	"context"
	"database/sql"
	"database/sql/driver"
	"fmt"
	"github.com/cloudwego/dynamicgo/testdata/kitex_gen/base"
	"github.com/cloudwego/dynamicgo/testdata/kitex_gen/ref"
)

type FOO int64

const (
	FOO_A FOO = 1
)

func (p FOO) String() string {
	switch p {
	case FOO_A:
		return "A"
	}
	return "<UNSET>"
}

func FOOFromString(s string) (FOO, error) {
	switch s {
	case "A":
		return FOO_A, nil
	}
	return FOO(0), fmt.Errorf("not a valid FOO string")
}

func FOOPtr(v FOO) *FOO { return &v }
func (p *FOO) Scan(value interface{}) (err error) {
	var result sql.NullInt64
	err = result.Scan(value)
	*p = FOO(result.Int64)
	return
}

func (p *FOO) Value() (driver.Value, error) {
	if p == nil {
		return nil, nil
	}
	return int64(*p), nil
}

type InnerBase struct {
	Bool               bool                  `thrift:"Bool,1" json:"Bool"`
	Byte               int8                  `thrift:"Byte,2" json:"Byte"`
	Int16              int16                 `thrift:"Int16,3" json:"Int16"`
	Int32              int32                 `thrift:"Int32,4" json:"Int32"`
	Int64              int64                 `thrift:"Int64,5" json:"Int64"`
	Double             float64               `thrift:"Double,6" json:"Double"`
	String_            string                `thrift:"String,7" json:"String"`
	ListInt32          []int32               `thrift:"ListInt32,8" json:"ListInt32"`
	MapStringString    map[string]string     `thrift:"MapStringString,9" json:"MapStringString"`
	SetInt32           []int32               `thrift:"SetInt32,10" json:"SetInt32"`
	Foo                FOO                   `thrift:"Foo,11" json:"Foo"`
	MapInt32String     map[int32]string      `thrift:"MapInt32String,12" json:"MapInt32String"`
	Binary             []byte                `thrift:"Binary,13" json:"Binary"`
	MapInt8String      map[int8]string       `thrift:"MapInt8String,14" json:"MapInt8String"`
	MapInt16String     map[int16]string      `thrift:"MapInt16String,15" json:"MapInt16String"`
	MapInt64String     map[int64]string      `thrift:"MapInt64String,16" json:"MapInt64String"`
	ListInnerBase      []*InnerBase          `thrift:"ListInnerBase,18" json:"ListInnerBase"`
	MapStringInnerBase map[string]*InnerBase `thrift:"MapStringInnerBase,19" json:"MapStringInnerBase"`
	InnerQuery         string                `thrift:"InnerQuery,20" json:"InnerQuery"`
	Base               *base.Base            `thrift:"Base,255" json:"Base"`
}

func NewInnerBase() *InnerBase {
	return &InnerBase{}
}

func (p *InnerBase) InitDefault() {
}

func (p *InnerBase) GetBool() (v bool) {
	return p.Bool
}

func (p *InnerBase) GetByte() (v int8) {
	return p.Byte
}

func (p *InnerBase) GetInt16() (v int16) {
	return p.Int16
}

func (p *InnerBase) GetInt32() (v int32) {
	return p.Int32
}

func (p *InnerBase) GetInt64() (v int64) {
	return p.Int64
}

func (p *InnerBase) GetDouble() (v float64) {
	return p.Double
}

func (p *InnerBase) GetString() (v string) {
	return p.String_
}

func (p *InnerBase) GetListInt32() (v []int32) {
	return p.ListInt32
}

func (p *InnerBase) GetMapStringString() (v map[string]string) {
	return p.MapStringString
}

func (p *InnerBase) GetSetInt32() (v []int32) {
	return p.SetInt32
}

func (p *InnerBase) GetFoo() (v FOO) {
	return p.Foo
}

func (p *InnerBase) GetMapInt32String() (v map[int32]string) {
	return p.MapInt32String
}

func (p *InnerBase) GetBinary() (v []byte) {
	return p.Binary
}

func (p *InnerBase) GetMapInt8String() (v map[int8]string) {
	return p.MapInt8String
}

func (p *InnerBase) GetMapInt16String() (v map[int16]string) {
	return p.MapInt16String
}

func (p *InnerBase) GetMapInt64String() (v map[int64]string) {
	return p.MapInt64String
}

func (p *InnerBase) GetListInnerBase() (v []*InnerBase) {
	return p.ListInnerBase
}

func (p *InnerBase) GetMapStringInnerBase() (v map[string]*InnerBase) {
	return p.MapStringInnerBase
}

func (p *InnerBase) GetInnerQuery() (v string) {
	return p.InnerQuery
}

var InnerBase_Base_DEFAULT *base.Base

func (p *InnerBase) GetBase() (v *base.Base) {
	if !p.IsSetBase() {
		return InnerBase_Base_DEFAULT
	}
	return p.Base
}

func (p *InnerBase) IsSetBase() bool {
	return p.Base != nil
}

func (p *InnerBase) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("InnerBase(%+v)", *p)
}

var fieldIDToName_InnerBase = map[int16]string{
	1:   "Bool",
	2:   "Byte",
	3:   "Int16",
	4:   "Int32",
	5:   "Int64",
	6:   "Double",
	7:   "String",
	8:   "ListInt32",
	9:   "MapStringString",
	10:  "SetInt32",
	11:  "Foo",
	12:  "MapInt32String",
	13:  "Binary",
	14:  "MapInt8String",
	15:  "MapInt16String",
	16:  "MapInt64String",
	18:  "ListInnerBase",
	19:  "MapStringInnerBase",
	20:  "InnerQuery",
	255: "Base",
}

type ExampleReq struct {
	Msg       *string    `thrift:"Msg,1,optional" json:"msg"`
	Cookie    *float64   `thrift:"Cookie,2,optional" json:"Cookie,omitempty"`
	Path      string     `thrift:"Path,3,required" json:"Path"`
	Query     []string   `thrift:"Query,4,optional" json:"Query,omitempty"`
	Header    *bool      `thrift:"Header,5,optional" json:"Header,omitempty"`
	Code      int64      `thrift:"Code,6" json:"code_code"`
	InnerBase *InnerBase `thrift:"InnerBase,7" json:"InnerBase"`
	RawUri    string     `thrift:"RawUri,8" json:"RawUri"`
	Subfix    float64    `thrift:"Subfix,32767" json:"Subfix"`
	Base      *base.Base `thrift:"Base,255" json:"Base"`
}

func NewExampleReq() *ExampleReq {
	return &ExampleReq{}
}

func (p *ExampleReq) InitDefault() {
}

var ExampleReq_Msg_DEFAULT string

func (p *ExampleReq) GetMsg() (v string) {
	if !p.IsSetMsg() {
		return ExampleReq_Msg_DEFAULT
	}
	return *p.Msg
}

var ExampleReq_Cookie_DEFAULT float64

func (p *ExampleReq) GetCookie() (v float64) {
	if !p.IsSetCookie() {
		return ExampleReq_Cookie_DEFAULT
	}
	return *p.Cookie
}

func (p *ExampleReq) GetPath() (v string) {
	return p.Path
}

var ExampleReq_Query_DEFAULT []string

func (p *ExampleReq) GetQuery() (v []string) {
	if !p.IsSetQuery() {
		return ExampleReq_Query_DEFAULT
	}
	return p.Query
}

var ExampleReq_Header_DEFAULT bool

func (p *ExampleReq) GetHeader() (v bool) {
	if !p.IsSetHeader() {
		return ExampleReq_Header_DEFAULT
	}
	return *p.Header
}

func (p *ExampleReq) GetCode() (v int64) {
	return p.Code
}

var ExampleReq_InnerBase_DEFAULT *InnerBase

func (p *ExampleReq) GetInnerBase() (v *InnerBase) {
	if !p.IsSetInnerBase() {
		return ExampleReq_InnerBase_DEFAULT
	}
	return p.InnerBase
}

func (p *ExampleReq) GetRawUri() (v string) {
	return p.RawUri
}

func (p *ExampleReq) GetSubfix() (v float64) {
	return p.Subfix
}

var ExampleReq_Base_DEFAULT *base.Base

func (p *ExampleReq) GetBase() (v *base.Base) {
	if !p.IsSetBase() {
		return ExampleReq_Base_DEFAULT
	}
	return p.Base
}

func (p *ExampleReq) IsSetMsg() bool {
	return p.Msg != nil
}

func (p *ExampleReq) IsSetCookie() bool {
	return p.Cookie != nil
}

func (p *ExampleReq) IsSetQuery() bool {
	return p.Query != nil
}

func (p *ExampleReq) IsSetHeader() bool {
	return p.Header != nil
}

func (p *ExampleReq) IsSetInnerBase() bool {
	return p.InnerBase != nil
}

func (p *ExampleReq) IsSetBase() bool {
	return p.Base != nil
}

func (p *ExampleReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleReq(%+v)", *p)
}

var fieldIDToName_ExampleReq = map[int16]string{
	1:     "Msg",
	2:     "Cookie",
	3:     "Path",
	4:     "Query",
	5:     "Header",
	6:     "Code",
	7:     "InnerBase",
	8:     "RawUri",
	32767: "Subfix",
	255:   "Base",
}

type ExampleResp struct {
	Msg       string         `thrift:"Msg,1" json:"Msg"`
	Cookie    *float64       `thrift:"Cookie,2,optional" json:"Cookie,omitempty"`
	Status    int32          `thrift:"Status,3,required" json:"Status"`
	Header    *bool          `thrift:"Header,4,optional" json:"Header,omitempty"`
	Code      int64          `thrift:"Code,6" json:"code_code"`
	Subfix    float64        `thrift:"Subfix,32767" json:"Subfix"`
	InnerBase *InnerBase     `thrift:"InnerBase,7" json:"InnerBase"`
	BaseResp  *base.BaseResp `thrift:"BaseResp,255" json:"BaseResp"`
}

func NewExampleResp() *ExampleResp {
	return &ExampleResp{}
}

func (p *ExampleResp) InitDefault() {
}

func (p *ExampleResp) GetMsg() (v string) {
	return p.Msg
}

var ExampleResp_Cookie_DEFAULT float64

func (p *ExampleResp) GetCookie() (v float64) {
	if !p.IsSetCookie() {
		return ExampleResp_Cookie_DEFAULT
	}
	return *p.Cookie
}

func (p *ExampleResp) GetStatus() (v int32) {
	return p.Status
}

var ExampleResp_Header_DEFAULT bool

func (p *ExampleResp) GetHeader() (v bool) {
	if !p.IsSetHeader() {
		return ExampleResp_Header_DEFAULT
	}
	return *p.Header
}

func (p *ExampleResp) GetCode() (v int64) {
	return p.Code
}

func (p *ExampleResp) GetSubfix() (v float64) {
	return p.Subfix
}

var ExampleResp_InnerBase_DEFAULT *InnerBase

func (p *ExampleResp) GetInnerBase() (v *InnerBase) {
	if !p.IsSetInnerBase() {
		return ExampleResp_InnerBase_DEFAULT
	}
	return p.InnerBase
}

var ExampleResp_BaseResp_DEFAULT *base.BaseResp

func (p *ExampleResp) GetBaseResp() (v *base.BaseResp) {
	if !p.IsSetBaseResp() {
		return ExampleResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *ExampleResp) IsSetCookie() bool {
	return p.Cookie != nil
}

func (p *ExampleResp) IsSetHeader() bool {
	return p.Header != nil
}

func (p *ExampleResp) IsSetInnerBase() bool {
	return p.InnerBase != nil
}

func (p *ExampleResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *ExampleResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleResp(%+v)", *p)
}

var fieldIDToName_ExampleResp = map[int16]string{
	1:     "Msg",
	2:     "Cookie",
	3:     "Status",
	4:     "Header",
	6:     "Code",
	32767: "Subfix",
	7:     "InnerBase",
	255:   "BaseResp",
}

type ExampleError struct {
	MapInnerBaseInnerBase map[*InnerBase]*InnerBase `thrift:"MapInnerBaseInnerBase,1" json:"MapInnerBaseInnerBase"`
	Base64                []byte                    `thrift:"Base64,2" json:"Base64"`
	Query                 string                    `thrift:"Query,3,required" json:"Query"`
	Header                string                    `thrift:"Header,4" json:"Header"`
	Q2                    int32                     `thrift:"Q2,5" json:"Q2"`
}

func NewExampleError() *ExampleError {
	return &ExampleError{}
}

func (p *ExampleError) InitDefault() {
}

func (p *ExampleError) GetMapInnerBaseInnerBase() (v map[*InnerBase]*InnerBase) {
	return p.MapInnerBaseInnerBase
}

func (p *ExampleError) GetBase64() (v []byte) {
	return p.Base64
}

func (p *ExampleError) GetQuery() (v string) {
	return p.Query
}

func (p *ExampleError) GetHeader() (v string) {
	return p.Header
}

func (p *ExampleError) GetQ2() (v int32) {
	return p.Q2
}

func (p *ExampleError) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleError(%+v)", *p)
}

var fieldIDToName_ExampleError = map[int16]string{
	1: "MapInnerBaseInnerBase",
	2: "Base64",
	3: "Query",
	4: "Header",
	5: "Q2",
}

type ExampleErrorResp struct {
	Int64 int64  `thrift:"Int64,2" json:"Int64"`
	Xjson string `thrift:"Xjson,4" json:"Xjson"`
}

func NewExampleErrorResp() *ExampleErrorResp {
	return &ExampleErrorResp{}
}

func (p *ExampleErrorResp) InitDefault() {
}

func (p *ExampleErrorResp) GetInt64() (v int64) {
	return p.Int64
}

func (p *ExampleErrorResp) GetXjson() (v string) {
	return p.Xjson
}

func (p *ExampleErrorResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleErrorResp(%+v)", *p)
}

var fieldIDToName_ExampleErrorResp = map[int16]string{
	2: "Int64",
	4: "Xjson",
}

type ExampleInt2Float struct {
	Int32   int32   `thrift:"Int32,1" json:"Int32"`
	Float64 float64 `thrift:"Float64,2" json:"Float64"`
	String_ string  `thrift:"String,3" json:"中文"`
	Int64   int64   `thrift:"Int64,4" json:"Int64"`
	Subfix  float64 `thrift:"Subfix,32767" json:"Subfix"`
}

func NewExampleInt2Float() *ExampleInt2Float {
	return &ExampleInt2Float{}
}

func (p *ExampleInt2Float) InitDefault() {
}

func (p *ExampleInt2Float) GetInt32() (v int32) {
	return p.Int32
}

func (p *ExampleInt2Float) GetFloat64() (v float64) {
	return p.Float64
}

func (p *ExampleInt2Float) GetString() (v string) {
	return p.String_
}

func (p *ExampleInt2Float) GetInt64() (v int64) {
	return p.Int64
}

func (p *ExampleInt2Float) GetSubfix() (v float64) {
	return p.Subfix
}

func (p *ExampleInt2Float) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleInt2Float(%+v)", *p)
}

var fieldIDToName_ExampleInt2Float = map[int16]string{
	1:     "Int32",
	2:     "Float64",
	3:     "String",
	4:     "Int64",
	32767: "Subfix",
}

type JSONObject struct {
	A string `thrift:"A,1" json:"a"`
	B int8   `thrift:"B,2" json:"b"`
}

func NewJSONObject() *JSONObject {
	return &JSONObject{}
}

func (p *JSONObject) InitDefault() {
}

func (p *JSONObject) GetA() (v string) {
	return p.A
}

func (p *JSONObject) GetB() (v int8) {
	return p.B
}

func (p *JSONObject) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("JSONObject(%+v)", *p)
}

var fieldIDToName_JSONObject = map[int16]string{
	1: "A",
	2: "B",
}

type ExampleJSONString struct {
	Query   *JSONObject      `thrift:"Query,1" json:"Query"`
	Query2  []string         `thrift:"Query2,2,required" json:"Query2"`
	Header  *JSONObject      `thrift:"Header,3,required" json:"Header"`
	Header2 map[int32]string `thrift:"Header2,4,required" json:"Header2"`
	Cookie  *JSONObject      `thrift:"Cookie,5" json:"Cookie"`
	Cookie2 []int32          `thrift:"Cookie2,6,required" json:"Cookie2"`
}

func NewExampleJSONString() *ExampleJSONString {
	return &ExampleJSONString{}
}

func (p *ExampleJSONString) InitDefault() {
}

var ExampleJSONString_Query_DEFAULT *JSONObject

func (p *ExampleJSONString) GetQuery() (v *JSONObject) {
	if !p.IsSetQuery() {
		return ExampleJSONString_Query_DEFAULT
	}
	return p.Query
}

func (p *ExampleJSONString) GetQuery2() (v []string) {
	return p.Query2
}

var ExampleJSONString_Header_DEFAULT *JSONObject

func (p *ExampleJSONString) GetHeader() (v *JSONObject) {
	if !p.IsSetHeader() {
		return ExampleJSONString_Header_DEFAULT
	}
	return p.Header
}

func (p *ExampleJSONString) GetHeader2() (v map[int32]string) {
	return p.Header2
}

var ExampleJSONString_Cookie_DEFAULT *JSONObject

func (p *ExampleJSONString) GetCookie() (v *JSONObject) {
	if !p.IsSetCookie() {
		return ExampleJSONString_Cookie_DEFAULT
	}
	return p.Cookie
}

func (p *ExampleJSONString) GetCookie2() (v []int32) {
	return p.Cookie2
}

func (p *ExampleJSONString) IsSetQuery() bool {
	return p.Query != nil
}

func (p *ExampleJSONString) IsSetHeader() bool {
	return p.Header != nil
}

func (p *ExampleJSONString) IsSetCookie() bool {
	return p.Cookie != nil
}

func (p *ExampleJSONString) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleJSONString(%+v)", *p)
}

var fieldIDToName_ExampleJSONString = map[int16]string{
	1: "Query",
	2: "Query2",
	3: "Header",
	4: "Header2",
	5: "Cookie",
	6: "Cookie2",
}

type ExamplePartial struct {
	Msg string `thrift:"Msg,1" json:"msg"`
}

func NewExamplePartial() *ExamplePartial {
	return &ExamplePartial{}
}

func (p *ExamplePartial) InitDefault() {
}

func (p *ExamplePartial) GetMsg() (v string) {
	return p.Msg
}

func (p *ExamplePartial) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExamplePartial(%+v)", *p)
}

var fieldIDToName_ExamplePartial = map[int16]string{
	1: "Msg",
}

type ExamplePartial2 struct {
	Msg       string            `thrift:"Msg,1" json:"msg"`
	Cookie    *float64          `thrift:"Cookie,2,optional" json:"Cookie,omitempty"`
	Status    int32             `thrift:"Status,3,required" json:"Status"`
	Header    *bool             `thrift:"Header,4,optional" json:"Header,omitempty"`
	Code      int64             `thrift:"Code,6" json:"code_code"`
	Subfix    float64           `thrift:"Subfix,32767" json:"Subfix"`
	InnerBase *InnerBasePartial `thrift:"InnerBase,7" json:"InnerBase"`
	BaseResp  *base.BaseResp    `thrift:"BaseResp,255" json:"BaseResp"`
}

func NewExamplePartial2() *ExamplePartial2 {
	return &ExamplePartial2{}
}

func (p *ExamplePartial2) InitDefault() {
}

func (p *ExamplePartial2) GetMsg() (v string) {
	return p.Msg
}

var ExamplePartial2_Cookie_DEFAULT float64

func (p *ExamplePartial2) GetCookie() (v float64) {
	if !p.IsSetCookie() {
		return ExamplePartial2_Cookie_DEFAULT
	}
	return *p.Cookie
}

func (p *ExamplePartial2) GetStatus() (v int32) {
	return p.Status
}

var ExamplePartial2_Header_DEFAULT bool

func (p *ExamplePartial2) GetHeader() (v bool) {
	if !p.IsSetHeader() {
		return ExamplePartial2_Header_DEFAULT
	}
	return *p.Header
}

func (p *ExamplePartial2) GetCode() (v int64) {
	return p.Code
}

func (p *ExamplePartial2) GetSubfix() (v float64) {
	return p.Subfix
}

var ExamplePartial2_InnerBase_DEFAULT *InnerBasePartial

func (p *ExamplePartial2) GetInnerBase() (v *InnerBasePartial) {
	if !p.IsSetInnerBase() {
		return ExamplePartial2_InnerBase_DEFAULT
	}
	return p.InnerBase
}

var ExamplePartial2_BaseResp_DEFAULT *base.BaseResp

func (p *ExamplePartial2) GetBaseResp() (v *base.BaseResp) {
	if !p.IsSetBaseResp() {
		return ExamplePartial2_BaseResp_DEFAULT
	}
	return p.BaseResp
}

func (p *ExamplePartial2) IsSetCookie() bool {
	return p.Cookie != nil
}

func (p *ExamplePartial2) IsSetHeader() bool {
	return p.Header != nil
}

func (p *ExamplePartial2) IsSetInnerBase() bool {
	return p.InnerBase != nil
}

func (p *ExamplePartial2) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *ExamplePartial2) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExamplePartial2(%+v)", *p)
}

var fieldIDToName_ExamplePartial2 = map[int16]string{
	1:     "Msg",
	2:     "Cookie",
	3:     "Status",
	4:     "Header",
	6:     "Code",
	32767: "Subfix",
	7:     "InnerBase",
	255:   "BaseResp",
}

type InnerBasePartial struct {
	Bool bool       `thrift:"Bool,1" json:"Bool"`
	Base *base.Base `thrift:"Base,255" json:"Base"`
}

func NewInnerBasePartial() *InnerBasePartial {
	return &InnerBasePartial{}
}

func (p *InnerBasePartial) InitDefault() {
}

func (p *InnerBasePartial) GetBool() (v bool) {
	return p.Bool
}

var InnerBasePartial_Base_DEFAULT *base.Base

func (p *InnerBasePartial) GetBase() (v *base.Base) {
	if !p.IsSetBase() {
		return InnerBasePartial_Base_DEFAULT
	}
	return p.Base
}

func (p *InnerBasePartial) IsSetBase() bool {
	return p.Base != nil
}

func (p *InnerBasePartial) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("InnerBasePartial(%+v)", *p)
}

var fieldIDToName_InnerBasePartial = map[int16]string{
	1:   "Bool",
	255: "Base",
}

type ExampleFallback struct {
	Msg     string `thrift:"Msg,2" json:"Msg"`
	Heeader string `thrift:"Heeader,3" json:"Heeader"`
}

func NewExampleFallback() *ExampleFallback {
	return &ExampleFallback{}
}

func (p *ExampleFallback) InitDefault() {
}

func (p *ExampleFallback) GetMsg() (v string) {
	return p.Msg
}

func (p *ExampleFallback) GetHeeader() (v string) {
	return p.Heeader
}

func (p *ExampleFallback) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleFallback(%+v)", *p)
}

var fieldIDToName_ExampleFallback = map[int16]string{
	2: "Msg",
	3: "Heeader",
}

type InnerCode struct {
	C1 int64        `thrift:"C1,1" json:"C1"`
	C2 int16        `thrift:"C2,2" json:"code"`
	C3 []*InnerCode `thrift:"C3,3" json:"C3"`
}

func NewInnerCode() *InnerCode {
	return &InnerCode{}
}

func (p *InnerCode) InitDefault() {
}

func (p *InnerCode) GetC1() (v int64) {
	return p.C1
}

func (p *InnerCode) GetC2() (v int16) {
	return p.C2
}

func (p *InnerCode) GetC3() (v []*InnerCode) {
	return p.C3
}

func (p *InnerCode) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("InnerCode(%+v)", *p)
}

var fieldIDToName_InnerCode = map[int16]string{
	1: "C1",
	2: "C2",
	3: "C3",
}

type ExampleApiBody struct {
	Code      int64      `thrift:"Code,1" json:"Code"`
	Code2     int16      `thrift:"Code2,2" json:"code"`
	InnerCode *InnerCode `thrift:"InnerCode,3" json:"InnerCode"`
}

func NewExampleApiBody() *ExampleApiBody {
	return &ExampleApiBody{}
}

func (p *ExampleApiBody) InitDefault() {
}

func (p *ExampleApiBody) GetCode() (v int64) {
	return p.Code
}

func (p *ExampleApiBody) GetCode2() (v int16) {
	return p.Code2
}

var ExampleApiBody_InnerCode_DEFAULT *InnerCode

func (p *ExampleApiBody) GetInnerCode() (v *InnerCode) {
	if !p.IsSetInnerCode() {
		return ExampleApiBody_InnerCode_DEFAULT
	}
	return p.InnerCode
}

func (p *ExampleApiBody) IsSetInnerCode() bool {
	return p.InnerCode != nil
}

func (p *ExampleApiBody) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleApiBody(%+v)", *p)
}

var fieldIDToName_ExampleApiBody = map[int16]string{
	1: "Code",
	2: "Code2",
	3: "InnerCode",
}

type InnerJSON struct {
	A         string  `thrift:"A,1" json:"a"`
	B         int64   `thrift:"B,2" json:"b"`
	InnerForm float64 `thrift:"inner_form,3" json:"inner_form"`
}

func NewInnerJSON() *InnerJSON {
	return &InnerJSON{}
}

func (p *InnerJSON) InitDefault() {
}

func (p *InnerJSON) GetA() (v string) {
	return p.A
}

func (p *InnerJSON) GetB() (v int64) {
	return p.B
}

func (p *InnerJSON) GetInnerForm() (v float64) {
	return p.InnerForm
}

func (p *InnerJSON) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("InnerJSON(%+v)", *p)
}

var fieldIDToName_InnerJSON = map[int16]string{
	1: "A",
	2: "B",
	3: "inner_form",
}

type ExamplePostForm struct {
	Query string     `thrift:"Query,1" json:"Query"`
	Form  string     `thrift:"Form,2" json:"Form"`
	JSON  *InnerJSON `thrift:"JSON,3" json:"JSON"`
}

func NewExamplePostForm() *ExamplePostForm {
	return &ExamplePostForm{}
}

func (p *ExamplePostForm) InitDefault() {
}

func (p *ExamplePostForm) GetQuery() (v string) {
	return p.Query
}

func (p *ExamplePostForm) GetForm() (v string) {
	return p.Form
}

var ExamplePostForm_JSON_DEFAULT *InnerJSON

func (p *ExamplePostForm) GetJSON() (v *InnerJSON) {
	if !p.IsSetJSON() {
		return ExamplePostForm_JSON_DEFAULT
	}
	return p.JSON
}

func (p *ExamplePostForm) IsSetJSON() bool {
	return p.JSON != nil
}

func (p *ExamplePostForm) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExamplePostForm(%+v)", *p)
}

var fieldIDToName_ExamplePostForm = map[int16]string{
	1: "Query",
	2: "Form",
	3: "JSON",
}

type InnerStruct struct {
	InnerJSON string `thrift:"InnerJSON,1" json:"inner_json"`
	Must      string `thrift:"Must,2,required" json:"Must"`
}

func NewInnerStruct() *InnerStruct {
	return &InnerStruct{}
}

func (p *InnerStruct) InitDefault() {
}

func (p *InnerStruct) GetInnerJSON() (v string) {
	return p.InnerJSON
}

func (p *InnerStruct) GetMust() (v string) {
	return p.Must
}

func (p *InnerStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("InnerStruct(%+v)", *p)
}

var fieldIDToName_InnerStruct = map[int16]string{
	1: "InnerJSON",
	2: "Must",
}

type ExampleDynamicStruct struct {
	Query       string       `thrift:"Query,1,required" json:"Query"`
	JSON        string       `thrift:"JSON,2" json:"json"`
	InnerStruct *InnerStruct `thrift:"InnerStruct,3" json:"inner_struct"`
}

func NewExampleDynamicStruct() *ExampleDynamicStruct {
	return &ExampleDynamicStruct{}
}

func (p *ExampleDynamicStruct) InitDefault() {
}

func (p *ExampleDynamicStruct) GetQuery() (v string) {
	return p.Query
}

func (p *ExampleDynamicStruct) GetJSON() (v string) {
	return p.JSON
}

var ExampleDynamicStruct_InnerStruct_DEFAULT *InnerStruct

func (p *ExampleDynamicStruct) GetInnerStruct() (v *InnerStruct) {
	if !p.IsSetInnerStruct() {
		return ExampleDynamicStruct_InnerStruct_DEFAULT
	}
	return p.InnerStruct
}

func (p *ExampleDynamicStruct) IsSetInnerStruct() bool {
	return p.InnerStruct != nil
}

func (p *ExampleDynamicStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleDynamicStruct(%+v)", *p)
}

var fieldIDToName_ExampleDynamicStruct = map[int16]string{
	1: "Query",
	2: "JSON",
	3: "InnerStruct",
}

type ExampleBase64Binary struct {
	Binary  []byte `thrift:"Binary,1" json:"Binary"`
	Binary2 []byte `thrift:"Binary2,2" json:"Binary2"`
}

func NewExampleBase64Binary() *ExampleBase64Binary {
	return &ExampleBase64Binary{}
}

func (p *ExampleBase64Binary) InitDefault() {
}

func (p *ExampleBase64Binary) GetBinary() (v []byte) {
	return p.Binary
}

func (p *ExampleBase64Binary) GetBinary2() (v []byte) {
	return p.Binary2
}

func (p *ExampleBase64Binary) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleBase64Binary(%+v)", *p)
}

var fieldIDToName_ExampleBase64Binary = map[int16]string{
	1: "Binary",
	2: "Binary2",
}

type ExampleDefaultValue struct {
	A string  `thrift:"A,1" json:"A"`
	B int32   `thrift:"B,2" json:"B"`
	C float64 `thrift:"C,3" json:"C"`
	D string  `thrift:"D,4" json:"D"`
}

func NewExampleDefaultValue() *ExampleDefaultValue {
	return &ExampleDefaultValue{

		A: "hello",
		B: int32(ref.FOO_A),
		C: 1.2,
		D: ref.ConstString,
	}
}

func (p *ExampleDefaultValue) InitDefault() {
	p.A = "hello"
	p.B = int32(ref.FOO_A)
	p.C = 1.2
	p.D = ref.ConstString
}

func (p *ExampleDefaultValue) GetA() (v string) {
	return p.A
}

func (p *ExampleDefaultValue) GetB() (v int32) {
	return p.B
}

func (p *ExampleDefaultValue) GetC() (v float64) {
	return p.C
}

func (p *ExampleDefaultValue) GetD() (v string) {
	return p.D
}

func (p *ExampleDefaultValue) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleDefaultValue(%+v)", *p)
}

var fieldIDToName_ExampleDefaultValue = map[int16]string{
	1: "A",
	2: "B",
	3: "C",
	4: "D",
}

type ExampleOptionalDefaultValue struct {
	A string  `thrift:"A,1,optional" json:"A,omitempty"`
	B int32   `thrift:"B,2,required" json:"B"`
	C float64 `thrift:"C,3,optional" json:"C,omitempty"`
	D string  `thrift:"D,4,required" json:"D"`
	E *string `thrift:"E,5,optional" json:"E,omitempty"`
	F *string `thrift:"F,6,optional" json:"F,omitempty"`
}

func NewExampleOptionalDefaultValue() *ExampleOptionalDefaultValue {
	return &ExampleOptionalDefaultValue{

		A: "hello",
		B: int32(ref.FOO_A),
		C: 1.2,
		D: ref.ConstString,
	}
}

func (p *ExampleOptionalDefaultValue) InitDefault() {
	p.A = "hello"
	p.B = int32(ref.FOO_A)
	p.C = 1.2
	p.D = ref.ConstString
}

var ExampleOptionalDefaultValue_A_DEFAULT string = "hello"

func (p *ExampleOptionalDefaultValue) GetA() (v string) {
	if !p.IsSetA() {
		return ExampleOptionalDefaultValue_A_DEFAULT
	}
	return p.A
}

func (p *ExampleOptionalDefaultValue) GetB() (v int32) {
	return p.B
}

var ExampleOptionalDefaultValue_C_DEFAULT float64 = 1.2

func (p *ExampleOptionalDefaultValue) GetC() (v float64) {
	if !p.IsSetC() {
		return ExampleOptionalDefaultValue_C_DEFAULT
	}
	return p.C
}

func (p *ExampleOptionalDefaultValue) GetD() (v string) {
	return p.D
}

var ExampleOptionalDefaultValue_E_DEFAULT string

func (p *ExampleOptionalDefaultValue) GetE() (v string) {
	if !p.IsSetE() {
		return ExampleOptionalDefaultValue_E_DEFAULT
	}
	return *p.E
}

var ExampleOptionalDefaultValue_F_DEFAULT string

func (p *ExampleOptionalDefaultValue) GetF() (v string) {
	if !p.IsSetF() {
		return ExampleOptionalDefaultValue_F_DEFAULT
	}
	return *p.F
}

func (p *ExampleOptionalDefaultValue) IsSetA() bool {
	return p.A != ExampleOptionalDefaultValue_A_DEFAULT
}

func (p *ExampleOptionalDefaultValue) IsSetC() bool {
	return p.C != ExampleOptionalDefaultValue_C_DEFAULT
}

func (p *ExampleOptionalDefaultValue) IsSetE() bool {
	return p.E != nil
}

func (p *ExampleOptionalDefaultValue) IsSetF() bool {
	return p.F != nil
}

func (p *ExampleOptionalDefaultValue) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleOptionalDefaultValue(%+v)", *p)
}

var fieldIDToName_ExampleOptionalDefaultValue = map[int16]string{
	1: "A",
	2: "B",
	3: "C",
	4: "D",
	5: "E",
	6: "F",
}

type ExampleNoBodyStruct struct {
	NoBodyStruct *NoBodyStruct `thrift:"NoBodyStruct,1" json:"NoBodyStruct"`
}

func NewExampleNoBodyStruct() *ExampleNoBodyStruct {
	return &ExampleNoBodyStruct{}
}

func (p *ExampleNoBodyStruct) InitDefault() {
}

var ExampleNoBodyStruct_NoBodyStruct_DEFAULT *NoBodyStruct

func (p *ExampleNoBodyStruct) GetNoBodyStruct() (v *NoBodyStruct) {
	if !p.IsSetNoBodyStruct() {
		return ExampleNoBodyStruct_NoBodyStruct_DEFAULT
	}
	return p.NoBodyStruct
}

func (p *ExampleNoBodyStruct) IsSetNoBodyStruct() bool {
	return p.NoBodyStruct != nil
}

func (p *ExampleNoBodyStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleNoBodyStruct(%+v)", *p)
}

var fieldIDToName_ExampleNoBodyStruct = map[int16]string{
	1: "NoBodyStruct",
}

type NoBodyStruct struct {
	A *int32 `thrift:"A,1,optional" json:"A,omitempty"`
	B *int32 `thrift:"B,2,optional" json:"B,omitempty"`
	C int32  `thrift:"C,3,optional" json:"C,omitempty"`
}

func NewNoBodyStruct() *NoBodyStruct {
	return &NoBodyStruct{

		C: 1,
	}
}

func (p *NoBodyStruct) InitDefault() {
	p.C = 1
}

var NoBodyStruct_A_DEFAULT int32

func (p *NoBodyStruct) GetA() (v int32) {
	if !p.IsSetA() {
		return NoBodyStruct_A_DEFAULT
	}
	return *p.A
}

var NoBodyStruct_B_DEFAULT int32

func (p *NoBodyStruct) GetB() (v int32) {
	if !p.IsSetB() {
		return NoBodyStruct_B_DEFAULT
	}
	return *p.B
}

var NoBodyStruct_C_DEFAULT int32 = 1

func (p *NoBodyStruct) GetC() (v int32) {
	if !p.IsSetC() {
		return NoBodyStruct_C_DEFAULT
	}
	return p.C
}

func (p *NoBodyStruct) IsSetA() bool {
	return p.A != nil
}

func (p *NoBodyStruct) IsSetB() bool {
	return p.B != nil
}

func (p *NoBodyStruct) IsSetC() bool {
	return p.C != NoBodyStruct_C_DEFAULT
}

func (p *NoBodyStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("NoBodyStruct(%+v)", *p)
}

var fieldIDToName_NoBodyStruct = map[int16]string{
	1: "A",
	2: "B",
	3: "C",
}

type Exception struct {
	Code int32  `thrift:"code,1" json:"code"`
	Msg  string `thrift:"msg,255" json:"msg"`
}

func NewException() *Exception {
	return &Exception{}
}

func (p *Exception) InitDefault() {
}

func (p *Exception) GetCode() (v int32) {
	return p.Code
}

func (p *Exception) GetMsg() (v string) {
	return p.Msg
}

func (p *Exception) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Exception(%+v)", *p)
}
func (p *Exception) Error() string {
	return p.String()
}

var fieldIDToName_Exception = map[int16]string{
	1:   "code",
	255: "msg",
}

type ExampleService interface {
	ExampleMethod(ctx context.Context, req *ExampleReq) (r *ExampleResp, err error)

	ErrorMethod(ctx context.Context, req *ExampleError) (r *ExampleErrorResp, err error)

	Int2FloatMethod(ctx context.Context, req *ExampleInt2Float) (r *ExampleInt2Float, err error)

	JSONStringMethod(ctx context.Context, req *ExampleJSONString) (r *ExampleJSONString, err error)

	PartialMethod(ctx context.Context, req *ExamplePartial2) (r *ExamplePartial, err error)

	FallbackMethod(ctx context.Context, req *ExampleFallback) (r *ExampleFallback, err error)

	ApiBodyMethod(ctx context.Context, req *ExampleApiBody) (r *ExampleApiBody, err error)

	PostFormMethod(ctx context.Context, req *ExamplePostForm) (r *ExamplePostForm, err error)

	DynamicStructMethod(ctx context.Context, req *ExampleDynamicStruct) (r *ExampleDynamicStruct, err error)

	Base64BinaryMethod(ctx context.Context, req *ExampleBase64Binary) (r *ExampleBase64Binary, err error)

	DefaultValueMethod(ctx context.Context, req *ExampleDefaultValue) (r *ExampleDefaultValue, err error)

	OptionalDefaultValueMethod(ctx context.Context, req *ExampleOptionalDefaultValue) (r *ExampleOptionalDefaultValue, err error)

	NoBodyStructMethod(ctx context.Context, req *ExampleNoBodyStruct) (r *ExampleNoBodyStruct, err error)

	String(ctx context.Context, req string) (r string, err error)

	I64(ctx context.Context, req int64) (r int64, err error)
}

type ExampleServiceExampleMethodArgs struct {
	Req *ExampleReq `thrift:"req,1" json:"req"`
}

func NewExampleServiceExampleMethodArgs() *ExampleServiceExampleMethodArgs {
	return &ExampleServiceExampleMethodArgs{}
}

func (p *ExampleServiceExampleMethodArgs) InitDefault() {
}

var ExampleServiceExampleMethodArgs_Req_DEFAULT *ExampleReq

func (p *ExampleServiceExampleMethodArgs) GetReq() (v *ExampleReq) {
	if !p.IsSetReq() {
		return ExampleServiceExampleMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceExampleMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceExampleMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceExampleMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceExampleMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceExampleMethodResult struct {
	Success *ExampleResp `thrift:"success,0,optional" json:"success,omitempty"`
	Err     *Exception   `thrift:"err,1,optional" json:"err,omitempty"`
}

func NewExampleServiceExampleMethodResult() *ExampleServiceExampleMethodResult {
	return &ExampleServiceExampleMethodResult{}
}

func (p *ExampleServiceExampleMethodResult) InitDefault() {
}

var ExampleServiceExampleMethodResult_Success_DEFAULT *ExampleResp

func (p *ExampleServiceExampleMethodResult) GetSuccess() (v *ExampleResp) {
	if !p.IsSetSuccess() {
		return ExampleServiceExampleMethodResult_Success_DEFAULT
	}
	return p.Success
}

var ExampleServiceExampleMethodResult_Err_DEFAULT *Exception

func (p *ExampleServiceExampleMethodResult) GetErr() (v *Exception) {
	if !p.IsSetErr() {
		return ExampleServiceExampleMethodResult_Err_DEFAULT
	}
	return p.Err
}

func (p *ExampleServiceExampleMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceExampleMethodResult) IsSetErr() bool {
	return p.Err != nil
}

func (p *ExampleServiceExampleMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceExampleMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceExampleMethodResult = map[int16]string{
	0: "success",
	1: "err",
}

type ExampleServiceErrorMethodArgs struct {
	Req *ExampleError `thrift:"req,1" json:"req"`
}

func NewExampleServiceErrorMethodArgs() *ExampleServiceErrorMethodArgs {
	return &ExampleServiceErrorMethodArgs{}
}

func (p *ExampleServiceErrorMethodArgs) InitDefault() {
}

var ExampleServiceErrorMethodArgs_Req_DEFAULT *ExampleError

func (p *ExampleServiceErrorMethodArgs) GetReq() (v *ExampleError) {
	if !p.IsSetReq() {
		return ExampleServiceErrorMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceErrorMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceErrorMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceErrorMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceErrorMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceErrorMethodResult struct {
	Success *ExampleErrorResp `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceErrorMethodResult() *ExampleServiceErrorMethodResult {
	return &ExampleServiceErrorMethodResult{}
}

func (p *ExampleServiceErrorMethodResult) InitDefault() {
}

var ExampleServiceErrorMethodResult_Success_DEFAULT *ExampleErrorResp

func (p *ExampleServiceErrorMethodResult) GetSuccess() (v *ExampleErrorResp) {
	if !p.IsSetSuccess() {
		return ExampleServiceErrorMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceErrorMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceErrorMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceErrorMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceErrorMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceInt2FloatMethodArgs struct {
	Req *ExampleInt2Float `thrift:"req,1" json:"req"`
}

func NewExampleServiceInt2FloatMethodArgs() *ExampleServiceInt2FloatMethodArgs {
	return &ExampleServiceInt2FloatMethodArgs{}
}

func (p *ExampleServiceInt2FloatMethodArgs) InitDefault() {
}

var ExampleServiceInt2FloatMethodArgs_Req_DEFAULT *ExampleInt2Float

func (p *ExampleServiceInt2FloatMethodArgs) GetReq() (v *ExampleInt2Float) {
	if !p.IsSetReq() {
		return ExampleServiceInt2FloatMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceInt2FloatMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceInt2FloatMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceInt2FloatMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceInt2FloatMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceInt2FloatMethodResult struct {
	Success *ExampleInt2Float `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceInt2FloatMethodResult() *ExampleServiceInt2FloatMethodResult {
	return &ExampleServiceInt2FloatMethodResult{}
}

func (p *ExampleServiceInt2FloatMethodResult) InitDefault() {
}

var ExampleServiceInt2FloatMethodResult_Success_DEFAULT *ExampleInt2Float

func (p *ExampleServiceInt2FloatMethodResult) GetSuccess() (v *ExampleInt2Float) {
	if !p.IsSetSuccess() {
		return ExampleServiceInt2FloatMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceInt2FloatMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceInt2FloatMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceInt2FloatMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceInt2FloatMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceJSONStringMethodArgs struct {
	Req *ExampleJSONString `thrift:"req,1" json:"req"`
}

func NewExampleServiceJSONStringMethodArgs() *ExampleServiceJSONStringMethodArgs {
	return &ExampleServiceJSONStringMethodArgs{}
}

func (p *ExampleServiceJSONStringMethodArgs) InitDefault() {
}

var ExampleServiceJSONStringMethodArgs_Req_DEFAULT *ExampleJSONString

func (p *ExampleServiceJSONStringMethodArgs) GetReq() (v *ExampleJSONString) {
	if !p.IsSetReq() {
		return ExampleServiceJSONStringMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceJSONStringMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceJSONStringMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceJSONStringMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceJSONStringMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceJSONStringMethodResult struct {
	Success *ExampleJSONString `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceJSONStringMethodResult() *ExampleServiceJSONStringMethodResult {
	return &ExampleServiceJSONStringMethodResult{}
}

func (p *ExampleServiceJSONStringMethodResult) InitDefault() {
}

var ExampleServiceJSONStringMethodResult_Success_DEFAULT *ExampleJSONString

func (p *ExampleServiceJSONStringMethodResult) GetSuccess() (v *ExampleJSONString) {
	if !p.IsSetSuccess() {
		return ExampleServiceJSONStringMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceJSONStringMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceJSONStringMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceJSONStringMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceJSONStringMethodResult = map[int16]string{
	0: "success",
}

type ExampleServicePartialMethodArgs struct {
	Req *ExamplePartial2 `thrift:"req,1" json:"req"`
}

func NewExampleServicePartialMethodArgs() *ExampleServicePartialMethodArgs {
	return &ExampleServicePartialMethodArgs{}
}

func (p *ExampleServicePartialMethodArgs) InitDefault() {
}

var ExampleServicePartialMethodArgs_Req_DEFAULT *ExamplePartial2

func (p *ExampleServicePartialMethodArgs) GetReq() (v *ExamplePartial2) {
	if !p.IsSetReq() {
		return ExampleServicePartialMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServicePartialMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServicePartialMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServicePartialMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServicePartialMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServicePartialMethodResult struct {
	Success *ExamplePartial `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServicePartialMethodResult() *ExampleServicePartialMethodResult {
	return &ExampleServicePartialMethodResult{}
}

func (p *ExampleServicePartialMethodResult) InitDefault() {
}

var ExampleServicePartialMethodResult_Success_DEFAULT *ExamplePartial

func (p *ExampleServicePartialMethodResult) GetSuccess() (v *ExamplePartial) {
	if !p.IsSetSuccess() {
		return ExampleServicePartialMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServicePartialMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServicePartialMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServicePartialMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServicePartialMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceFallbackMethodArgs struct {
	Req *ExampleFallback `thrift:"req,1" json:"req"`
}

func NewExampleServiceFallbackMethodArgs() *ExampleServiceFallbackMethodArgs {
	return &ExampleServiceFallbackMethodArgs{}
}

func (p *ExampleServiceFallbackMethodArgs) InitDefault() {
}

var ExampleServiceFallbackMethodArgs_Req_DEFAULT *ExampleFallback

func (p *ExampleServiceFallbackMethodArgs) GetReq() (v *ExampleFallback) {
	if !p.IsSetReq() {
		return ExampleServiceFallbackMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceFallbackMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceFallbackMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceFallbackMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceFallbackMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceFallbackMethodResult struct {
	Success *ExampleFallback `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceFallbackMethodResult() *ExampleServiceFallbackMethodResult {
	return &ExampleServiceFallbackMethodResult{}
}

func (p *ExampleServiceFallbackMethodResult) InitDefault() {
}

var ExampleServiceFallbackMethodResult_Success_DEFAULT *ExampleFallback

func (p *ExampleServiceFallbackMethodResult) GetSuccess() (v *ExampleFallback) {
	if !p.IsSetSuccess() {
		return ExampleServiceFallbackMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceFallbackMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceFallbackMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceFallbackMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceFallbackMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceApiBodyMethodArgs struct {
	Req *ExampleApiBody `thrift:"req,1" json:"req"`
}

func NewExampleServiceApiBodyMethodArgs() *ExampleServiceApiBodyMethodArgs {
	return &ExampleServiceApiBodyMethodArgs{}
}

func (p *ExampleServiceApiBodyMethodArgs) InitDefault() {
}

var ExampleServiceApiBodyMethodArgs_Req_DEFAULT *ExampleApiBody

func (p *ExampleServiceApiBodyMethodArgs) GetReq() (v *ExampleApiBody) {
	if !p.IsSetReq() {
		return ExampleServiceApiBodyMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceApiBodyMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceApiBodyMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceApiBodyMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceApiBodyMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceApiBodyMethodResult struct {
	Success *ExampleApiBody `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceApiBodyMethodResult() *ExampleServiceApiBodyMethodResult {
	return &ExampleServiceApiBodyMethodResult{}
}

func (p *ExampleServiceApiBodyMethodResult) InitDefault() {
}

var ExampleServiceApiBodyMethodResult_Success_DEFAULT *ExampleApiBody

func (p *ExampleServiceApiBodyMethodResult) GetSuccess() (v *ExampleApiBody) {
	if !p.IsSetSuccess() {
		return ExampleServiceApiBodyMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceApiBodyMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceApiBodyMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceApiBodyMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceApiBodyMethodResult = map[int16]string{
	0: "success",
}

type ExampleServicePostFormMethodArgs struct {
	Req *ExamplePostForm `thrift:"req,1" json:"req"`
}

func NewExampleServicePostFormMethodArgs() *ExampleServicePostFormMethodArgs {
	return &ExampleServicePostFormMethodArgs{}
}

func (p *ExampleServicePostFormMethodArgs) InitDefault() {
}

var ExampleServicePostFormMethodArgs_Req_DEFAULT *ExamplePostForm

func (p *ExampleServicePostFormMethodArgs) GetReq() (v *ExamplePostForm) {
	if !p.IsSetReq() {
		return ExampleServicePostFormMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServicePostFormMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServicePostFormMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServicePostFormMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServicePostFormMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServicePostFormMethodResult struct {
	Success *ExamplePostForm `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServicePostFormMethodResult() *ExampleServicePostFormMethodResult {
	return &ExampleServicePostFormMethodResult{}
}

func (p *ExampleServicePostFormMethodResult) InitDefault() {
}

var ExampleServicePostFormMethodResult_Success_DEFAULT *ExamplePostForm

func (p *ExampleServicePostFormMethodResult) GetSuccess() (v *ExamplePostForm) {
	if !p.IsSetSuccess() {
		return ExampleServicePostFormMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServicePostFormMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServicePostFormMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServicePostFormMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServicePostFormMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceDynamicStructMethodArgs struct {
	Req *ExampleDynamicStruct `thrift:"req,1" json:"req"`
}

func NewExampleServiceDynamicStructMethodArgs() *ExampleServiceDynamicStructMethodArgs {
	return &ExampleServiceDynamicStructMethodArgs{}
}

func (p *ExampleServiceDynamicStructMethodArgs) InitDefault() {
}

var ExampleServiceDynamicStructMethodArgs_Req_DEFAULT *ExampleDynamicStruct

func (p *ExampleServiceDynamicStructMethodArgs) GetReq() (v *ExampleDynamicStruct) {
	if !p.IsSetReq() {
		return ExampleServiceDynamicStructMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceDynamicStructMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceDynamicStructMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceDynamicStructMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceDynamicStructMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceDynamicStructMethodResult struct {
	Success *ExampleDynamicStruct `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceDynamicStructMethodResult() *ExampleServiceDynamicStructMethodResult {
	return &ExampleServiceDynamicStructMethodResult{}
}

func (p *ExampleServiceDynamicStructMethodResult) InitDefault() {
}

var ExampleServiceDynamicStructMethodResult_Success_DEFAULT *ExampleDynamicStruct

func (p *ExampleServiceDynamicStructMethodResult) GetSuccess() (v *ExampleDynamicStruct) {
	if !p.IsSetSuccess() {
		return ExampleServiceDynamicStructMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceDynamicStructMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceDynamicStructMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceDynamicStructMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceDynamicStructMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceBase64BinaryMethodArgs struct {
	Req *ExampleBase64Binary `thrift:"req,1" json:"req"`
}

func NewExampleServiceBase64BinaryMethodArgs() *ExampleServiceBase64BinaryMethodArgs {
	return &ExampleServiceBase64BinaryMethodArgs{}
}

func (p *ExampleServiceBase64BinaryMethodArgs) InitDefault() {
}

var ExampleServiceBase64BinaryMethodArgs_Req_DEFAULT *ExampleBase64Binary

func (p *ExampleServiceBase64BinaryMethodArgs) GetReq() (v *ExampleBase64Binary) {
	if !p.IsSetReq() {
		return ExampleServiceBase64BinaryMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceBase64BinaryMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceBase64BinaryMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceBase64BinaryMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceBase64BinaryMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceBase64BinaryMethodResult struct {
	Success *ExampleBase64Binary `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceBase64BinaryMethodResult() *ExampleServiceBase64BinaryMethodResult {
	return &ExampleServiceBase64BinaryMethodResult{}
}

func (p *ExampleServiceBase64BinaryMethodResult) InitDefault() {
}

var ExampleServiceBase64BinaryMethodResult_Success_DEFAULT *ExampleBase64Binary

func (p *ExampleServiceBase64BinaryMethodResult) GetSuccess() (v *ExampleBase64Binary) {
	if !p.IsSetSuccess() {
		return ExampleServiceBase64BinaryMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceBase64BinaryMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceBase64BinaryMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceBase64BinaryMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceBase64BinaryMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceDefaultValueMethodArgs struct {
	Req *ExampleDefaultValue `thrift:"req,1" json:"req"`
}

func NewExampleServiceDefaultValueMethodArgs() *ExampleServiceDefaultValueMethodArgs {
	return &ExampleServiceDefaultValueMethodArgs{}
}

func (p *ExampleServiceDefaultValueMethodArgs) InitDefault() {
}

var ExampleServiceDefaultValueMethodArgs_Req_DEFAULT *ExampleDefaultValue

func (p *ExampleServiceDefaultValueMethodArgs) GetReq() (v *ExampleDefaultValue) {
	if !p.IsSetReq() {
		return ExampleServiceDefaultValueMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceDefaultValueMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceDefaultValueMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceDefaultValueMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceDefaultValueMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceDefaultValueMethodResult struct {
	Success *ExampleDefaultValue `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceDefaultValueMethodResult() *ExampleServiceDefaultValueMethodResult {
	return &ExampleServiceDefaultValueMethodResult{}
}

func (p *ExampleServiceDefaultValueMethodResult) InitDefault() {
}

var ExampleServiceDefaultValueMethodResult_Success_DEFAULT *ExampleDefaultValue

func (p *ExampleServiceDefaultValueMethodResult) GetSuccess() (v *ExampleDefaultValue) {
	if !p.IsSetSuccess() {
		return ExampleServiceDefaultValueMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceDefaultValueMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceDefaultValueMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceDefaultValueMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceDefaultValueMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceOptionalDefaultValueMethodArgs struct {
	Req *ExampleOptionalDefaultValue `thrift:"req,1" json:"req"`
}

func NewExampleServiceOptionalDefaultValueMethodArgs() *ExampleServiceOptionalDefaultValueMethodArgs {
	return &ExampleServiceOptionalDefaultValueMethodArgs{}
}

func (p *ExampleServiceOptionalDefaultValueMethodArgs) InitDefault() {
}

var ExampleServiceOptionalDefaultValueMethodArgs_Req_DEFAULT *ExampleOptionalDefaultValue

func (p *ExampleServiceOptionalDefaultValueMethodArgs) GetReq() (v *ExampleOptionalDefaultValue) {
	if !p.IsSetReq() {
		return ExampleServiceOptionalDefaultValueMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceOptionalDefaultValueMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceOptionalDefaultValueMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceOptionalDefaultValueMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceOptionalDefaultValueMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceOptionalDefaultValueMethodResult struct {
	Success *ExampleOptionalDefaultValue `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceOptionalDefaultValueMethodResult() *ExampleServiceOptionalDefaultValueMethodResult {
	return &ExampleServiceOptionalDefaultValueMethodResult{}
}

func (p *ExampleServiceOptionalDefaultValueMethodResult) InitDefault() {
}

var ExampleServiceOptionalDefaultValueMethodResult_Success_DEFAULT *ExampleOptionalDefaultValue

func (p *ExampleServiceOptionalDefaultValueMethodResult) GetSuccess() (v *ExampleOptionalDefaultValue) {
	if !p.IsSetSuccess() {
		return ExampleServiceOptionalDefaultValueMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceOptionalDefaultValueMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceOptionalDefaultValueMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceOptionalDefaultValueMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceOptionalDefaultValueMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceNoBodyStructMethodArgs struct {
	Req *ExampleNoBodyStruct `thrift:"req,1" json:"req"`
}

func NewExampleServiceNoBodyStructMethodArgs() *ExampleServiceNoBodyStructMethodArgs {
	return &ExampleServiceNoBodyStructMethodArgs{}
}

func (p *ExampleServiceNoBodyStructMethodArgs) InitDefault() {
}

var ExampleServiceNoBodyStructMethodArgs_Req_DEFAULT *ExampleNoBodyStruct

func (p *ExampleServiceNoBodyStructMethodArgs) GetReq() (v *ExampleNoBodyStruct) {
	if !p.IsSetReq() {
		return ExampleServiceNoBodyStructMethodArgs_Req_DEFAULT
	}
	return p.Req
}

func (p *ExampleServiceNoBodyStructMethodArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *ExampleServiceNoBodyStructMethodArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceNoBodyStructMethodArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceNoBodyStructMethodArgs = map[int16]string{
	1: "req",
}

type ExampleServiceNoBodyStructMethodResult struct {
	Success *ExampleNoBodyStruct `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceNoBodyStructMethodResult() *ExampleServiceNoBodyStructMethodResult {
	return &ExampleServiceNoBodyStructMethodResult{}
}

func (p *ExampleServiceNoBodyStructMethodResult) InitDefault() {
}

var ExampleServiceNoBodyStructMethodResult_Success_DEFAULT *ExampleNoBodyStruct

func (p *ExampleServiceNoBodyStructMethodResult) GetSuccess() (v *ExampleNoBodyStruct) {
	if !p.IsSetSuccess() {
		return ExampleServiceNoBodyStructMethodResult_Success_DEFAULT
	}
	return p.Success
}

func (p *ExampleServiceNoBodyStructMethodResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceNoBodyStructMethodResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceNoBodyStructMethodResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceNoBodyStructMethodResult = map[int16]string{
	0: "success",
}

type ExampleServiceStringArgs struct {
	Req string `thrift:"req,1" json:"req"`
}

func NewExampleServiceStringArgs() *ExampleServiceStringArgs {
	return &ExampleServiceStringArgs{}
}

func (p *ExampleServiceStringArgs) InitDefault() {
}

func (p *ExampleServiceStringArgs) GetReq() (v string) {
	return p.Req
}

func (p *ExampleServiceStringArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceStringArgs(%+v)", *p)
}

var fieldIDToName_ExampleServiceStringArgs = map[int16]string{
	1: "req",
}

type ExampleServiceStringResult struct {
	Success *string `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceStringResult() *ExampleServiceStringResult {
	return &ExampleServiceStringResult{}
}

func (p *ExampleServiceStringResult) InitDefault() {
}

var ExampleServiceStringResult_Success_DEFAULT string

func (p *ExampleServiceStringResult) GetSuccess() (v string) {
	if !p.IsSetSuccess() {
		return ExampleServiceStringResult_Success_DEFAULT
	}
	return *p.Success
}

func (p *ExampleServiceStringResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceStringResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceStringResult(%+v)", *p)
}

var fieldIDToName_ExampleServiceStringResult = map[int16]string{
	0: "success",
}

type ExampleServiceI64Args struct {
	Req int64 `thrift:"req,1" json:"req"`
}

func NewExampleServiceI64Args() *ExampleServiceI64Args {
	return &ExampleServiceI64Args{}
}

func (p *ExampleServiceI64Args) InitDefault() {
}

func (p *ExampleServiceI64Args) GetReq() (v int64) {
	return p.Req
}

func (p *ExampleServiceI64Args) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceI64Args(%+v)", *p)
}

var fieldIDToName_ExampleServiceI64Args = map[int16]string{
	1: "req",
}

type ExampleServiceI64Result struct {
	Success *int64 `thrift:"success,0,optional" json:"success,omitempty"`
}

func NewExampleServiceI64Result() *ExampleServiceI64Result {
	return &ExampleServiceI64Result{}
}

func (p *ExampleServiceI64Result) InitDefault() {
}

var ExampleServiceI64Result_Success_DEFAULT int64

func (p *ExampleServiceI64Result) GetSuccess() (v int64) {
	if !p.IsSetSuccess() {
		return ExampleServiceI64Result_Success_DEFAULT
	}
	return *p.Success
}

func (p *ExampleServiceI64Result) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *ExampleServiceI64Result) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleServiceI64Result(%+v)", *p)
}

var fieldIDToName_ExampleServiceI64Result = map[int16]string{
	0: "success",
}

// exceptions of methods in ExampleService.
var (
	_ error = (*Exception)(nil)
)
